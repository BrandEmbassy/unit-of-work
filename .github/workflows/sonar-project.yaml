name: CI

on:
  push:
    branches:
      - DE-55463-SonarQubeIntegration
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  phpstan:
    name: CI PHPStan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.4
          - 8.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer config github-oauth.github.com ${{ secrets.COMPOSER_TOKEN }}
          composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Run phpstan
        run: composer phpstan

  ecs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.4
          - 8.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run code-sniffer
        run: composer check-cs

  phpunit:
    name: CI PHPUnit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        composer-arg:
          - "install"
          - "update --prefer-lowest"
        php-version:
          - 7.4
          - 8.1
        # Covered by phpunit-with-sonar
        exclude:
          - php-version: 7.4
            composer-arg: "install"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer config github-oauth.github.com ${{ secrets.COMPOSER_TOKEN }}
          composer ${{ matrix.composer-arg }} --no-progress --prefer-dist --optimize-autoloader

      - name: Run phpunit
        run: composer phpunit

  phpunit-with-sonar:
    name: CI PHPUnit + Sonar Cube
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        composer-arg:
          - "install"
        php-version:
          - 7.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets
          coverage: xdebug

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer config github-oauth.github.com ${{ secrets.COMPOSER_TOKEN }}
          composer ${{ matrix.composer-arg }} --no-progress --prefer-dist --optimize-autoloader

      - name: Run phpunit
        run: composer phpunit-cc

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonar.nice.com"
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
